[{"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/index.js":"1","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/App.js":"2","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/reportWebVitals.js":"3","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/loader/Loader.js":"4","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/routes/Router.js":"5","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/FullLayout.js":"6","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/About.js":"7","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/Starter.js":"8","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Breadcrumbs.js":"9","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Forms.js":"10","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Tables.js":"11","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Cards.js":"12","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Grid.js":"13","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Buttons.js":"14","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Badges.js":"15","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Alerts.js":"16","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Sidebar.js":"17","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Header.js":"18","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/ComponentCard.js":"19","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/SalesChart.js":"20","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Feeds.js":"21","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/ProjectTable.js":"22","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/TopCards.js":"23","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Blog.js":"24","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Logo.js":"25","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/ProjectData.js":"26","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Clock.js":"27","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/PopUp.js":"28","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Time.js":"29","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/ProfileCard.jsx":"30","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/Profile.jsx":"31","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/fakeProfiles.js":"32","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/PillForm.js":"33","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/PillPerForm.js":"34","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/UserForm.js":"35"},{"size":664,"mtime":1677791398540,"results":"36","hashOfConfig":"37"},{"size":225,"mtime":1635946920000,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499175100000,"results":"39","hashOfConfig":"37"},{"size":272,"mtime":1636194300000,"results":"40","hashOfConfig":"37"},{"size":2319,"mtime":1679424284852,"results":"41","hashOfConfig":"37"},{"size":776,"mtime":1638434926000,"results":"42","hashOfConfig":"37"},{"size":4718,"mtime":1662039000000,"results":"43","hashOfConfig":"37"},{"size":3796,"mtime":1679320387118,"results":"44","hashOfConfig":"37"},{"size":1386,"mtime":1636229280000,"results":"45","hashOfConfig":"37"},{"size":4022,"mtime":1636214894000,"results":"46","hashOfConfig":"37"},{"size":4795,"mtime":1636214562000,"results":"47","hashOfConfig":"37"},{"size":9517,"mtime":1636213596000,"results":"48","hashOfConfig":"37"},{"size":4507,"mtime":1636213680000,"results":"49","hashOfConfig":"37"},{"size":11071,"mtime":1636211934000,"results":"50","hashOfConfig":"37"},{"size":7423,"mtime":1636211912000,"results":"51","hashOfConfig":"37"},{"size":7698,"mtime":1636211892000,"results":"52","hashOfConfig":"37"},{"size":2757,"mtime":1679421762213,"results":"53","hashOfConfig":"37"},{"size":3073,"mtime":1677793233999,"results":"54","hashOfConfig":"37"},{"size":643,"mtime":1639989708000,"results":"55","hashOfConfig":"37"},{"size":1324,"mtime":1636210186000,"results":"56","hashOfConfig":"37"},{"size":1935,"mtime":1677961587825,"results":"57","hashOfConfig":"37"},{"size":2363,"mtime":1677794103414,"results":"58","hashOfConfig":"37"},{"size":646,"mtime":1677783011694,"results":"59","hashOfConfig":"37"},{"size":565,"mtime":1677774826965,"results":"60","hashOfConfig":"37"},{"size":249,"mtime":1635951350000,"results":"61","hashOfConfig":"37"},{"size":1592,"mtime":1677793788502,"results":"62","hashOfConfig":"37"},{"size":441,"mtime":1677792354698,"results":"63","hashOfConfig":"37"},{"size":1695,"mtime":1677971282263,"results":"64","hashOfConfig":"37"},{"size":276,"mtime":1678363993513,"results":"65","hashOfConfig":"37"},{"size":3381,"mtime":1679414741151,"results":"66","hashOfConfig":"37"},{"size":7129,"mtime":1679417773957,"results":"67","hashOfConfig":"37"},{"size":2031,"mtime":1679414821570,"results":"68","hashOfConfig":"37"},{"size":2779,"mtime":1679425850326,"results":"69","hashOfConfig":"37"},{"size":4909,"mtime":1679417860842,"results":"70","hashOfConfig":"37"},{"size":3439,"mtime":1679425513364,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"2utoze",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/index.js",[],["147","148"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/App.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/reportWebVitals.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/loader/Loader.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/routes/Router.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/FullLayout.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/About.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/Starter.js",["149"],"import { Col, Row } from \"reactstrap\";\r\nimport Feeds from \"../components/dashboard/Feeds\";\r\n//import ProjectTables from \"../components/dashboard/ProjectTable\";\r\nimport TopCards from \"../components/dashboard/TopCards\";\r\nimport Blog from \"../components/dashboard/Blog\";\r\nimport bg1 from \"../assets/images/bg/bg1.jpg\";\r\nimport bg2 from \"../assets/images/bg/bg2.jpg\";\r\nimport bg3 from \"../assets/images/bg/bg3.jpg\";\r\nimport bg4 from \"../assets/images/bg/bg4.jpg\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {getLenght} from \"../components/dashboard/ProjectData\";\r\nconst BlogData = [\r\n  {\r\n    image: bg1,\r\n    title: \"Pill#1\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description: \"Useful info for the effects and \",\r\n    btnbg: \"primary\",\r\n  },\r\n  {\r\n    image: bg2,\r\n    title: \"Pill#2\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n  {\r\n    image: bg3,\r\n    title: \"Pill#3\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n  {\r\n    image: bg4,\r\n    title: \"Pill#4\",\r\n    subtitle: \"2 comments, 1 Like\",\r\n    description:\r\n      \"This is a wider card with supporting text below as a natural lead-in to additional content.\",\r\n    btnbg: \"primary\",\r\n  },\r\n];\r\n\r\nfunction Starter(){\r\n\r\n  const [dateState, setDateState] = useState(new Date());\r\n  useEffect(() => {\r\n    setInterval(() => setDateState(new Date()), 30000);\r\n  }, []);\r\n\r\n\r\n  let date = dateState.toLocaleDateString('en-GB', {\r\n    day: 'numeric',\r\n    month: 'short',\r\n    year: 'numeric',\r\n  });\r\n\r\n  let time = dateState.toLocaleString('en-US', {\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    hour12: true,\r\n  });\r\n\r\n  //let dataLength = getLenght();\r\n\r\n  return (\r\n    <div>\r\n      {/***Top Cards***/}\r\n      {/*<Row>\r\n        <Col sm=\"6\" lg=\"3\">\r\n          <TopCards\r\n            bg=\"bg-light-warning text-warning\"\r\n            title=\"New Project\"\r\n            subtitle=\"Yearly Project\"\r\n            earning=\"456\"\r\n            icon=\"bi bi-basket3\"\r\n          />\r\n        </Col>\r\n        <Col sm=\"6\" lg=\"3\">\r\n          <TopCards\r\n            bg=\"bg-light-info text-into\"\r\n            title=\"Sales\"\r\n            subtitle=\"Weekly Sales\"\r\n            earning=\"210\"\r\n            icon=\"bi bi-bag\"\r\n          />\r\n        </Col>\r\n      </Row>*/}\r\n      {/***Sales & Feed***/}\r\n\r\n      {/***Table ***/}\r\n      <Row>\r\n        <Col sm=\"6\" lg=\"6\" xl=\"5\" xxl=\"7\">\r\n          <Feeds />\r\n        </Col>\r\n          {/*<Col sm=\"6\" lg=\"6\" xl=\"7\" xxl=\"8\">\r\n          <SalesChart />\r\n        </Col>*/}\r\n        <Col sm=\"6\" lg=\"5\">\r\n            <TopCards\r\n                bg=\"bg-light-success text-success\"\r\n                title=\"Profit\"\r\n                subtitle=\"Time\"\r\n                earning= {time}\r\n                icon=\"bi bi-clock\"\r\n            />\r\n            <TopCards\r\n                bg=\"bg-light-danger text-danger\"\r\n                title=\"Refunds\"\r\n                subtitle=\"Date\"\r\n                earning={date}\r\n                icon=\"bi bi-calendar\"\r\n            />\r\n        </Col>\r\n      </Row>\r\n      {/*<Row>\r\n        <Col lg=\"9\">\r\n          <ProjectTables />\r\n        </Col>\r\n      </Row>*/}\r\n      {/***Blog Cards***/}\r\n      <Row>\r\n        {BlogData.map((blg, index) => (\r\n          <Col sm=\"6\" lg=\"6\" xl=\"3\" key={index}>\r\n            <Blog\r\n              image={blg.image}\r\n              title={blg.title}\r\n              subtitle={blg.subtitle}\r\n              text={blg.description}\r\n              color={blg.btnbg}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Starter;\r\n","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Breadcrumbs.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Forms.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Tables.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Cards.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Grid.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Buttons.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Badges.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Alerts.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Sidebar.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Header.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/ComponentCard.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/SalesChart.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Feeds.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/ProjectTable.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/TopCards.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Blog.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Logo.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/ProjectData.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Clock.js",["150","151","152"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/PopUp.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Time.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/ProfileCard.jsx",["153","154"],"import React from 'react';\nimport { MDBCol, MDBContainer, MDBRow, MDBCard, MDBCardTitle, MDBCardText, MDBCardBody, MDBCardImage, MDBBtn } from 'mdb-react-ui-kit';\nimport {Button} from \"reactstrap\";\nimport { Link } from 'react-router-dom';\nimport {getUsers} from \"./fakeProfiles\";\nimport { useState } from 'react';\n\n\n\n\n\nexport default function ProfileCard() {\n    const [users] = useState(getUsers());\n    return (\n        <div className=\"vh-100\">\n            <MDBContainer>\n                {users.map(user => (\n                <MDBRow className=\"justify-content-center\">\n                    <MDBCol md=\"9\" lg=\"7\" xl=\"5\" className=\"mt-5\">\n                        <MDBCard style={{ borderRadius: '15px' }}>\n                            <MDBCardBody className=\"p-4\">\n                                <div className=\"d-flex text-black\">\n                                    <div className=\"flex-shrink-0\">\n                                        <MDBCardImage\n                                            src={user.img}\n                                            alt=\"avatar\"\n                                            className=\"rounded-circle\"\n                                            style={{ width: '150px' }}\n                                            fluid />\n                                    </div>\n                                    <div className=\"flex-grow-1 ms-3\">\n                                        <MDBCardTitle>{user.name}</MDBCardTitle>\n                                        <div className=\"d-flex justify-content-start rounded-3 p-2 mb-2\"\n                                             style={{ backgroundColor: '#efefef' }}>\n                                            <div>\n                                                <p className=\"small text-muted mb-1\">Age</p>\n                                                <p className=\"mb-0\">{user.age}</p>\n                                            </div>\n                                            <div className=\"px-3\">\n                                                <p className=\"small text-muted mb-1\">Gender</p>\n                                                <p className=\"mb-0\">{user.gender}</p>\n                                            </div>\n                                            <div>\n                                                <p className=\"small text-muted mb-1\">#Pills</p>\n                                                <p className=\"mb-0\">{user.prescription_pills.length}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"d-flex pt-2\">\n                                                <Link to={{pathname: `/profile/${user.id}`}} style={{ textDecoration: 'none' }}>\n                                                    <Button className=\"btn\" outline color=\"info\">\n                                                    info\n                                                    </Button>\n                                                </Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                </MDBRow>\n                ))}\n            </MDBContainer>\n        </div>\n    );\n}","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/Profile.jsx",["155","156","157","158","159","160","161"],"import React, {useState} from 'react';\nimport {\n    MDBCol,\n    MDBContainer,\n    MDBRow,\n    MDBCard,\n    MDBCardText,\n    MDBCardBody,\n    MDBCardImage,\n    MDBBtn,\n    MDBBreadcrumb,\n    MDBBreadcrumbItem,\n    MDBProgress,\n    MDBProgressBar,\n    MDBIcon,\n    MDBListGroup,\n    MDBListGroupItem\n} from 'mdb-react-ui-kit';\nimport {useParams} from \"react-router\";\nimport {getUserName, getUserAge, getUserGender, getUserPills, getUserImg, getEmail, getPillSum, getUserPhone, getUserAddress} from \"./fakeProfiles\";\nimport {Badge, Button} from \"reactstrap\";\nimport SalesChart from \"../dashboard/SalesChart\";\nimport {Link} from \"react-router-dom\";\n\n\nexport default function Profile() {\n    //const id = useLocation().state.id;\n    const { id } = useParams();\n    console.log(id);\n    const dictionary = getUserPills(id);\n    const entries = Object.entries(dictionary);\n    const sum = getPillSum(id);\n    console.log(sum);\n\n\n    return (\n        <section style={{ backgroundColor: '#eee' }}>\n            <MDBContainer className=\"py-5\">\n                <MDBRow>\n                    <MDBCol lg=\"4\">\n                        <MDBCard className=\"mb-4\">\n                            <MDBCardBody className=\"text-center\">\n                                <MDBCardImage\n                                    src= {getUserImg(id)}\n                                    alt=\"avatar\"\n                                    className=\"rounded-circle\"\n                                    style={{ width: '150px' }}\n                                    fluid />\n                            </MDBCardBody>\n                        </MDBCard>\n\n                        <MDBCard className=\"mb-4 mb-md-0\">\n                            <MDBCardBody>\n                                <MDBCardText className=\"mb-4\"><span className=\"text-primary font-italic me-1\"><h3>Prescription Pills</h3></span></MDBCardText>\n                                {entries.map(([key, value]) => (\n                                    <React.Fragment>\n                                        <MDBCardText className=\"mt-4 mb-1\" style={{ fontSize: '.77rem'}}>\n                                            <h5>{key}\n                                                <Badge color=\"secondary\" style={{marginLeft: '8px'}}>{value}</Badge>\n                                            </h5>\n                                        </MDBCardText>\n                                            <MDBProgress className=\"rounded\" >\n                                                <MDBProgressBar width={(value/sum)*100} valuemin={0} valuemax={100} />\n                                            </MDBProgress>\n                                    </React.Fragment>\n                                    ))}\n                            </MDBCardBody>\n\n                            <MDBCardBody>\n                                <Link to={{pathname: `/pillPerForm/${id}`}} style={{ textDecoration: 'none' }}>\n                                    <Button\n                                        className=\"btn\"\n                                        outline\n                                        color=\"primary\"\n                                        style={{\n                                            position: \"absolute\",\n                                            bottom: 10,\n                                            right: 10,\n                                            margin: \"10px\",\n                                        }}\n                                    >\n                                        Add a pill\n                                    </Button>\n                                </Link>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                    <MDBCol lg=\"8\">\n                        <MDBCard className=\"mb-4\">\n                            <MDBCardBody>\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Full Name</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{getUserName(id)}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Age</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{getUserAge(id)}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Gender</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{getUserGender(id)}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Email</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{getEmail(id)}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Phone</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{getUserPhone(id)}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Address</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{getUserAddress(id)}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                            </MDBCardBody>\n                        </MDBCard>\n\n                        <MDBRow>\n                            <SalesChart/>\n                        </MDBRow>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        </section>\n    );\n}","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/fakeProfiles.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/PillForm.js",["162"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/PillPerForm.js",["163","164","165"],"import {\n    Card,\n    Row,\n    Col,\n    CardTitle,\n    CardBody,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText, ListGroupItem, ListGroup,\n} from \"reactstrap\";\nimport PopUp from \"../PopUp\";\nimport Time from '../Time';\nimport React, {useState} from \"react\";\nimport {getUserName} from \"../profile/fakeProfiles\";\nimport {useParams} from \"react-router\";\n\nconst timeData = [\n    {\n        title: \"Morning\",\n        icon: \"bi bi-brightness-high\",\n        color: \"warning\",\n    },\n    {\n        title: \"Noon\",\n        icon: \"bi bi-cloud-moon\",\n        color: \"info\",\n    },\n    {\n        title: \"Night\",\n        icon: \"bi bi-moon-stars\",\n        color: \"primary\",\n    },\n];\n\nconst PillPerForm = () => {\n    //const [buttonPopUp, setButtonPopUp] = useState(false); //for popup use\n    const { id } = useParams();\n    console.log(id);\n    return (\n        <Row>\n            <Col>\n                {/* --------------------------------------------------------------------------------*/}\n                {/* Card-1*/}\n                {/* --------------------------------------------------------------------------------*/}\n                <Card>\n                    <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n                        <i className=\"bi bi-bell me-2\"> </i>\n                        Add a new Pill for {getUserName(id)}\n                    </CardTitle>\n                    <CardBody>\n                        <Form>\n                            <FormGroup>\n                                <Label for=\"pillName\">Pill name</Label>\n                                <Input\n                                    id=\"pillName\"\n                                    name=\"pillName\"\n                                    placeholder=\"eg Depon\"\n                                    type=\"text\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"pillDosage\">Select # of Pills</Label>\n                                <Input id=\"pillDosage\" name=\"pillDosage\" type=\"select\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Input>\n                            </FormGroup>\n                            <FormGroup>\n                                {/*<div onClick={() => setButtonPopUp(true)}>\n                                    <Button className=\"btn\" outline color=\"primary\">\n                                        Set pill intake time\n                                    </Button>\n                                </div>\n                                <PopUp trigger={buttonPopUp} setTrigger={setButtonPopUp}>\n                                    <h3>My popup</h3>\n                                </PopUp>*/}\n                                <Time/>\n                                <Label for=\"pillDosage\">Set Time Intake</Label>\n                                {timeData.map((feed, index) => (\n                                    <ListGroupItem\n                                        key={index}\n                                        action\n                                        href=\"#\"\n                                        className=\"d-flex align-items-center p-3 border-0\"\n                                    >\n                                        <Button\n                                            className=\"rounded-circle me-3\"\n                                            size=\"sm\"\n                                            color={feed.color}\n                                        >\n                                            <i className={feed.icon}/>\n                                        </Button>\n                                        {feed.title}\n                                    </ListGroupItem>\n\n                                ))}\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleFile\">File</Label>\n                                <Input id=\"exampleFile\" name=\"file\" type=\"file\" />\n                                <FormText>\n                                    You can upload the medical exams associated with the pills you take\n                                </FormText>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Input type=\"checkbox\" /> <Label check>Check me out</Label>\n                            </FormGroup>\n                            <Button>Submit</Button>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PillPerForm;\n","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/UserForm.js",["166"],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":11,"column":9,"nodeType":"173","messageId":"174","endLine":11,"endColumn":18},{"ruleId":"175","severity":2,"message":"176","line":3,"column":35,"nodeType":"173","endLine":3,"endColumn":43},{"ruleId":"175","severity":2,"message":"177","line":4,"column":1,"nodeType":"173","endLine":4,"endColumn":10},{"ruleId":"178","severity":1,"message":"179","line":20,"column":1,"nodeType":"180","endLine":20,"endColumn":28},{"ruleId":"171","severity":1,"message":"181","line":2,"column":63,"nodeType":"173","messageId":"174","endLine":2,"endColumn":74},{"ruleId":"171","severity":1,"message":"182","line":2,"column":103,"nodeType":"173","messageId":"174","endLine":2,"endColumn":109},{"ruleId":"171","severity":1,"message":"183","line":1,"column":16,"nodeType":"173","messageId":"174","endLine":1,"endColumn":24},{"ruleId":"171","severity":1,"message":"182","line":10,"column":5,"nodeType":"173","messageId":"174","endLine":10,"endColumn":11},{"ruleId":"171","severity":1,"message":"184","line":11,"column":5,"nodeType":"173","messageId":"174","endLine":11,"endColumn":18},{"ruleId":"171","severity":1,"message":"185","line":12,"column":5,"nodeType":"173","messageId":"174","endLine":12,"endColumn":22},{"ruleId":"171","severity":1,"message":"186","line":15,"column":5,"nodeType":"173","messageId":"174","endLine":15,"endColumn":12},{"ruleId":"171","severity":1,"message":"187","line":16,"column":5,"nodeType":"173","messageId":"174","endLine":16,"endColumn":17},{"ruleId":"171","severity":1,"message":"188","line":17,"column":5,"nodeType":"173","messageId":"174","endLine":17,"endColumn":21},{"ruleId":"171","severity":1,"message":"189","line":16,"column":9,"nodeType":"173","messageId":"174","endLine":16,"endColumn":21},{"ruleId":"171","severity":1,"message":"190","line":12,"column":30,"nodeType":"173","messageId":"174","endLine":12,"endColumn":39},{"ruleId":"171","severity":1,"message":"191","line":14,"column":8,"nodeType":"173","messageId":"174","endLine":14,"endColumn":13},{"ruleId":"171","severity":1,"message":"183","line":16,"column":16,"nodeType":"173","messageId":"174","endLine":16,"endColumn":24},{"ruleId":"171","severity":1,"message":"192","line":13,"column":15,"nodeType":"173","messageId":"174","endLine":13,"endColumn":28},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'getLenght' is defined but never used.","Identifier","unusedVar","react-hooks/rules-of-hooks","React Hook \"useState\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.","React Hook \"useEffect\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'MDBCardText' is defined but never used.","'MDBBtn' is defined but never used.","'useState' is defined but never used.","'MDBBreadcrumb' is defined but never used.","'MDBBreadcrumbItem' is defined but never used.","'MDBIcon' is defined but never used.","'MDBListGroup' is defined but never used.","'MDBListGroupItem' is defined but never used.","'MDBContainer' is defined but never used.","'ListGroup' is defined but never used.","'PopUp' is defined but never used.","'ListGroupItem' is defined but never used.","no-global-assign","no-unsafe-negation"]