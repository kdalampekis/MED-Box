[{"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/index.js":"1","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/App.js":"2","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/reportWebVitals.js":"3","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/loader/Loader.js":"4","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/routes/Router.js":"5","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/FullLayout.js":"6","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/About.js":"7","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/Starter.js":"8","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Breadcrumbs.js":"9","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Forms.js":"10","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Tables.js":"11","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Cards.js":"12","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Grid.js":"13","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Buttons.js":"14","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Badges.js":"15","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Alerts.js":"16","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Sidebar.js":"17","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Header.js":"18","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/ComponentCard.js":"19","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/SalesChart.js":"20","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Feeds.js":"21","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/ProjectTable.js":"22","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/TopCards.js":"23","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Blog.js":"24","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Logo.js":"25","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/ProjectData.js":"26","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Clock.js":"27","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/PopUp.js":"28","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Time.js":"29","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/ProfileCard.jsx":"30","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/Profile.jsx":"31","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/fakeProfiles.js":"32","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/PillForm.js":"33","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/PillPerForm.js":"34","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/UserForm.js":"35","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Instructions.js":"36","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Pop.js":"37","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Pills/PilCard.jsx":"38","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Pills/fakePills.js":"39","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/Calendar.jsx":"40","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Pills/Pill.jsx":"41","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Pills/Comments.jsx":"42","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Pills/CommentData.js":"43","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/TimePicker.jsx":"44","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/api.js":"45"},{"size":664,"mtime":1677791398540,"results":"46","hashOfConfig":"47"},{"size":226,"mtime":1681501217390,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":499175100000,"results":"49","hashOfConfig":"47"},{"size":272,"mtime":1636194300000,"results":"50","hashOfConfig":"47"},{"size":2823,"mtime":1681509114095,"results":"51","hashOfConfig":"47"},{"size":862,"mtime":1681740890053,"results":"52","hashOfConfig":"47"},{"size":4718,"mtime":1662039000000,"results":"53","hashOfConfig":"47"},{"size":4539,"mtime":1681741081365,"results":"54","hashOfConfig":"47"},{"size":1386,"mtime":1636229280000,"results":"55","hashOfConfig":"47"},{"size":3805,"mtime":1679650507404,"results":"56","hashOfConfig":"47"},{"size":4795,"mtime":1636214562000,"results":"57","hashOfConfig":"47"},{"size":9517,"mtime":1636213596000,"results":"58","hashOfConfig":"47"},{"size":4507,"mtime":1636213680000,"results":"59","hashOfConfig":"47"},{"size":11071,"mtime":1679996648670,"results":"60","hashOfConfig":"47"},{"size":7423,"mtime":1636211912000,"results":"61","hashOfConfig":"47"},{"size":7698,"mtime":1636211892000,"results":"62","hashOfConfig":"47"},{"size":3029,"mtime":1681509114088,"results":"63","hashOfConfig":"47"},{"size":3032,"mtime":1681208180302,"results":"64","hashOfConfig":"47"},{"size":643,"mtime":1639989708000,"results":"65","hashOfConfig":"47"},{"size":1324,"mtime":1636210186000,"results":"66","hashOfConfig":"47"},{"size":1935,"mtime":1677961587825,"results":"67","hashOfConfig":"47"},{"size":2718,"mtime":1681508109175,"results":"68","hashOfConfig":"47"},{"size":646,"mtime":1677783011694,"results":"69","hashOfConfig":"47"},{"size":565,"mtime":1677774826965,"results":"70","hashOfConfig":"47"},{"size":249,"mtime":1635951350000,"results":"71","hashOfConfig":"47"},{"size":663,"mtime":1681207858467,"results":"72","hashOfConfig":"47"},{"size":441,"mtime":1677792354698,"results":"73","hashOfConfig":"74"},{"size":2526,"mtime":1681739414022,"results":"75","hashOfConfig":"47"},{"size":276,"mtime":1678363993513,"results":"76","hashOfConfig":"47"},{"size":3532,"mtime":1681717992775,"results":"77","hashOfConfig":"47"},{"size":7532,"mtime":1681507966215,"results":"78","hashOfConfig":"47"},{"size":1858,"mtime":1681208068616,"results":"79","hashOfConfig":"47"},{"size":2779,"mtime":1679425850326,"results":"80","hashOfConfig":"47"},{"size":4968,"mtime":1681150330834,"results":"81","hashOfConfig":"47"},{"size":3439,"mtime":1679425513364,"results":"82","hashOfConfig":"47"},{"size":982,"mtime":1679659302312,"results":"83","hashOfConfig":"47"},{"size":1152,"mtime":1680623589469,"results":"84","hashOfConfig":"47"},{"size":2424,"mtime":1681508265015,"results":"85","hashOfConfig":"47"},{"size":3806,"mtime":1681219609770,"results":"86","hashOfConfig":"47"},{"size":1422,"mtime":1681508854113,"results":"87","hashOfConfig":"47"},{"size":4794,"mtime":1681508265020,"results":"88","hashOfConfig":"47"},{"size":2548,"mtime":1681508186697,"results":"89","hashOfConfig":"47"},{"size":742,"mtime":1681208138226,"results":"90","hashOfConfig":"47"},{"size":5753,"mtime":1681234226008,"results":"91","hashOfConfig":"47"},{"size":54,"mtime":1681713126784,"results":"92","hashOfConfig":"47"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"dwu12c",{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"95"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"148","messages":"149","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"2utoze",{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"95"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"95"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"95"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"95"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"95"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"95"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"95"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"95"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"95"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/index.js",[],["197","198"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/App.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/reportWebVitals.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/loader/Loader.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/routes/Router.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/FullLayout.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/About.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/Starter.js",["199","200"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Breadcrumbs.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Forms.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Tables.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Cards.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Grid.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Buttons.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Badges.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Alerts.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Sidebar.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Header.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/ComponentCard.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/SalesChart.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Feeds.js",[],["201","202"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/ProjectTable.js",["203","204","205"],"import {Card, CardBody, CardTitle, CardSubtitle, Table, Badge, Alert} from \"reactstrap\";\r\nimport {getTableData} from \"./ProjectData\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Row} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from '../../api';\r\n\r\n\r\nfunction getColor(pills_missed){\r\n  if(pills_missed >= 1 && pills_missed <=2){\r\n    return \"warning\";\r\n  }else if (pills_missed > 2){\r\n    return \"danger\";\r\n  }else {\r\n    return \"success\"\r\n  }\r\n}\r\n\r\nconst ProjectTables = () => {\r\n  const [users, setusers] = useState([])\r\n\r\n  useEffect(() => {\r\n    axios.get(API_URL+'count_taken/')\r\n        .then(response => {\r\n          setusers(response.data);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n  }, []);\r\n\r\n  return (\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle tag=\"h2\">Device Notifications</CardTitle>\r\n          <Table className=\"no-wrap mt-4 align-middle\" responsive borderless>\r\n            <thead>\r\n              <tr>\r\n                <th><h5>Click on the icon to see history</h5></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((data, index) => (\r\n                  <Alert color= {getColor(data.missed)}>\r\n                      <td>\r\n                        <div className=\"d-flex align-items-center p-2\">\r\n                          <Link to={{pathname: `/profile/${data.id}`}} style={{ textDecoration: 'none' }}>\r\n                            <img\r\n                              src={data.imgSrc}\r\n                              className=\"rounded-circle\"\r\n                              alt=\"avatar\"\r\n                              width=\"45\"\r\n                              height=\"45\"\r\n                            />\r\n                          </Link>\r\n                          <div className=\"ms-5\">\r\n                            <h6 className=\"mb-0\" style={{color:\"black\"}}>{data.name}</h6>\r\n                            <span className=\"text-muted\">{data.email}</span>\r\n\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                          <h5 className=\"mb-0\" style={{color:\"black\"}}>Pills Missed\r\n                            <Badge color=\"dark\" className=\"ms-3\">\r\n                              {data.missed}\r\n                            </Badge>\r\n                          </h5>\r\n                      </td>\r\n                      <td style={{color:\"black\"}}>{data.date}</td>\r\n                  </Alert>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default ProjectTables;\r\n","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/TopCards.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Blog.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Logo.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/ProjectData.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Clock.js",["206","207","208"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/PopUp.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Time.js",[],["209","210"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/ProfileCard.jsx",["211","212","213"],"import React, { useEffect, useState } from 'react';\nimport { MDBCol, MDBContainer, MDBRow, MDBCard, MDBCardTitle, MDBCardText, MDBCardBody, MDBCardImage } from 'mdb-react-ui-kit';\nimport { Button, Col, Row } from \"reactstrap\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { API_URL } from '../../api';\nimport moment from 'moment-timezone';\n\n\nexport default function ProfileCard() {\n    const [users, set_users] = useState([]);\n\n    useEffect(() => {\n        axios.get(API_URL + 'getUserCards/')\n            .then(response => {\n                set_users(response.data);\n                console.log(response.data)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n\n    return (\n        <Row>\n            {users.map(user => (\n                <Col sm=\"10\" md=\"10\" lg=\"10\" xl=\"6\">\n                    <MDBContainer>\n                        <MDBCard style={{ borderRadius: '15px' }}>\n                            <MDBCardBody className=\"p-4\">\n                                <div className=\"d-flex text-black\">\n                                    <div className=\"flex-shrink-0\">\n                                        <MDBCardImage\n                                            src={user.imgSrc}\n                                            alt=\"avatar\"\n                                            className=\"rounded-circle\"\n                                            style={{ width: '150px' }}\n                                            fluid />\n                                    </div>\n                                    <div className=\"flex-grow-1 ms-3\">\n                                        <MDBCardTitle>{user.full_name}</MDBCardTitle>\n                                        <div className=\"d-flex justify-content-start rounded-3 p-2 mb-2\"\n                                             style={{ backgroundColor: '#efefef' }}>\n                                            {user.prescription_pill.name && user.prescription_pill.time ?\n                                                <div>\n                                                    <p className=\"small text-muted mb-1\">Next Pill Intake</p>\n                                                    <p className=\"mb-0\">{user.prescription_pill.name}</p>\n                                                    <p className=\"mb-0\">{moment.tz(user.prescription_pill.time, 'HH:mm:ss', 'Europe/Athens').format('h:mm A')}</p>\n                                                </div>\n                                                :\n                                                <p className=\"text-muted\">No prescription pills scheduled.</p>\n                                            }\n                                        </div>\n                                        <div className=\"d-flex pt-2\">\n                                            <Link to={{ pathname: `/profile/${user.id}` }} style={{ textDecoration: 'none' }}>\n                                                <Button className=\"btn\" outline color=\"info\">\n                                                    info\n                                                </Button>\n                                            </Link>\n                                        </div>\n                                    </div>\n                                </div>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBContainer>\n                </Col>\n            ))}\n        </Row>\n    );\n}\n","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/Profile.jsx",["214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"import React, {useEffect, useState} from 'react';\nimport {\n    MDBCol,\n    MDBContainer,\n    MDBRow,\n    MDBCard,\n    MDBCardText,\n    MDBCardBody,\n    MDBCardImage,\n    MDBBtn,\n    MDBBreadcrumb,\n    MDBBreadcrumbItem,\n    MDBProgress,\n    MDBProgressBar,\n    MDBIcon,\n    MDBListGroup,\n    MDBListGroupItem\n} from 'mdb-react-ui-kit';\nimport {useParams} from \"react-router\";\nimport {getUserName, getUserAge, getUserGender, getUserPills, getUserImg, getEmail, getPillSum, getUserPhone, getUserAddress} from \"./fakeProfiles\";\nimport {Badge, Button} from \"reactstrap\";\nimport SalesChart from \"../dashboard/SalesChart\";\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\";\nimport { API_URL } from '../../api';\n\n\n\nexport default function Profile() {\n    //const id = useLocation().state.id;\n    const { id } = useParams();\n    const [user, setUser] = useState({});\n\n    useEffect(() => {\n        axios.get(API_URL+`get_user/${id}/`)\n            .then(response => {\n                setUser(response.data);\n                console.log(response.data)\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n\n    return (\n        <section style={{ backgroundColor: '#eee' }}>\n            <MDBContainer className=\"py-5\">\n                <MDBRow>\n                    <MDBCol lg=\"4\">\n                        <MDBCard className=\"mb-4\">\n                            <MDBCardBody className=\"text-center\">\n                                <MDBCardImage\n                                    src= {user.imgSrc}\n                                    alt=\"avatar\"\n                                    className=\"rounded-circle\"\n                                    style={{ width: '150px' }}\n                                    fluid />\n                            </MDBCardBody>\n                        </MDBCard>\n\n                        <MDBCard className=\"mb-4 mb-md-0\">\n                            <MDBCardBody>\n                                <MDBCardText className=\"mb-1\"><span className=\"text-primary font-italic me-1\"><h3>Prescription Pills</h3></span></MDBCardText>\n                                <MDBCardText className=\"mb-1\"><span className=\"text-secondary font-italic me-1\"><h5>Today's Order</h5></span></MDBCardText>\n                                {user.prescription_pills && user.prescription_pills.map(pill => (\n                                    <React.Fragment key={pill.id}>\n                                        <MDBCardText className=\"mt-2 mb-2\" style={{ fontSize: '.77rem'}}>\n                                            <h5>{pill.name}\n                                                <Badge color=\"secondary\" style={{marginLeft: '8px'}}>{0}/{3}</Badge>\n                                            </h5>\n                                        </MDBCardText>\n                                        <MDBProgress className=\"rounded\" >\n                                            <MDBProgressBar width={30} valuemin={0} valuemax={100} />\n                                        </MDBProgress>\n                                    </React.Fragment>\n                                ))}\n                            </MDBCardBody>\n\n                            <MDBCardBody>\n                                <Link to={{pathname: `/pillPerForm/${id}`}} style={{ textDecoration: 'none' }}>\n                                    <Button\n                                        className=\"btn\"\n                                        outline\n                                        color=\"primary\"\n                                        style={{\n                                            position: \"absolute\",\n                                            bottom: 10,\n                                            right: 10,\n                                            margin: \"10px\",\n                                        }}\n                                    >\n                                        Add a pill\n                                    </Button>\n                                </Link>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                    <MDBCol lg=\"8\">\n                        <MDBCard className=\"mb-4\">\n                            <MDBCardBody>\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Full Name</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{user.full_name}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Age</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{user.age}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Gender</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{user.gender}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Email</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{user.email}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Phone</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{user.phone}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Description</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{user.description}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                            </MDBCardBody>\n                        </MDBCard>\n                        <MDBRow>\n                            <SalesChart/>\n                        </MDBRow>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        </section>\n    );\n}","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/fakeProfiles.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/PillForm.js",["230"],"import {\n    Card,\n    Row,\n    Col,\n    CardTitle,\n    CardBody,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input\n} from \"reactstrap\";\n\nimport React, {useState} from \"react\";\nimport {getUsers} from \"../profile/fakeProfiles\";\nimport {MDBContainer} from \"mdb-react-ui-kit\";\nconst PillForm = () => {\n    const [users] = useState(getUsers());\n    return (\n        <Row>\n            <Col>\n\n                <Card>\n                    <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n                        <i className=\"bi bi-bell me-2\"> </i>\n                        Add a new Pill\n                    </CardTitle>\n                    <CardBody>\n                        <Form>\n                            <FormGroup>\n                                <Label for=\"pillName\">Pill name</Label>\n                                <Input\n                                    id=\"pillName\"\n                                    name=\"pillName\"\n                                    placeholder=\"eg Depon\"\n                                    type=\"text\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"pillDosage\">Select # of Pills</Label>\n                                <Input id=\"pillDosage\" name=\"pillDosage\" type=\"select\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleSelectMulti\"><strong>Exclude</strong> Patient from taking this Pill</Label>\n                                <Input\n                                    id=\"exampleSelectMulti\"\n                                    multiple\n                                    name=\"selectMulti\"\n                                    type=\"select\"\n                                >\n                                    {users.map(user => (\n                                        <option>{user.name}</option>\n                                    ))}\n                                </Input>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Input type=\"checkbox\" /> <Label check>Check me out</Label>\n                            </FormGroup>\n                            <Button>Submit</Button>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PillForm;\n","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/PillPerForm.js",["231","232"],"import {\n    Card,\n    Row,\n    Col,\n    CardTitle,\n    CardBody,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText, ListGroupItem, ListGroup,\n} from \"reactstrap\";\n\nimport Timer from \"./TimePicker\";\nimport React, {useState} from \"react\";\nimport {getUserName} from \"../profile/fakeProfiles\";\nimport {useParams} from \"react-router\";\n\nconst timeData = [\n    {\n        title: \"Morning\",\n        icon: \"bi bi-brightness-high\",\n        color: \"warning\",\n    },\n    {\n        title: \"Noon\",\n        icon: \"bi bi-cloud-moon\",\n        color: \"info\",\n    },\n    {\n        title: \"Night\",\n        icon: \"bi bi-moon-stars\",\n        color: \"primary\",\n    },\n];\n\nconst PillPerForm = () => {\n    //const [buttonPopUp, setButtonPopUp] = useState(false); //for popup use\n    const { id } = useParams();\n    console.log(id);\n    return (\n        <Row>\n            <Col>\n                {/* --------------------------------------------------------------------------------*/}\n                {/* Card-1*/}\n                {/* --------------------------------------------------------------------------------*/}\n                <Card>\n                    <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n                        <i className=\"bi bi-bell me-2\"> </i>\n                        Add a new Pill for {getUserName(id)}\n                    </CardTitle>\n                    <CardBody>\n                        <Form>\n                            <FormGroup>\n                                <Label for=\"pillName\">Pill name</Label>\n                                <Input\n                                    id=\"pillName\"\n                                    name=\"pillName\"\n                                    placeholder=\"eg Depon\"\n                                    type=\"text\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"pillDosage\">Select # of Pills</Label>\n                                <Input id=\"pillDosage\" name=\"pillDosage\" type=\"select\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Input>\n                            </FormGroup>\n                            <FormGroup>\n                                {/*<div onClick={() => setButtonPopUp(true)}>\n                                    <Button className=\"btn\" outline color=\"primary\">\n                                        Set pill intake time\n                                    </Button>\n                                </div>\n                                <PopUp trigger={buttonPopUp} setTrigger={setButtonPopUp}>\n                                    <h3>My popup</h3>\n                                </PopUp>*/}\n                                <Label for=\"pillDosage\">Set Time Intake</Label>\n                                {timeData.map((feed, index) => (\n                                    <ListGroupItem\n                                        key={index}\n                                        action\n                                        href=\"#\"\n                                        className=\"d-flex align-items-center p-3 border-0\"\n                                    >\n                                        <Button\n                                            className=\"rounded-circle me-3\"\n                                            size=\"sm\"\n                                            color={feed.color}\n                                        >\n                                            <i className={feed.icon}/>\n                                        </Button>\n                                        {feed.title}\n                                    </ListGroupItem>\n\n                                ))}\n                            </FormGroup>\n                            <FormGroup>\n                                <Timer/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleFile\">File</Label>\n                                <Input id=\"exampleFile\" name=\"file\" type=\"file\" />\n                                <FormText>\n                                    You can upload the medical exams associated with the pills you take\n                                </FormText>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Input type=\"checkbox\" /> <Label check>Check me out</Label>\n                            </FormGroup>\n                            <Button>Submit</Button>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PillPerForm;\n","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/UserForm.js",["233"],"import React from \"react\";\nimport {\n    Card,\n    Row,\n    Col,\n    CardTitle,\n    CardBody,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText, ListGroupItem\n} from \"reactstrap\";\n\nconst UserForm = () => {\n    return (\n        <Row>\n            <Col>\n                {/* --------------------------------------------------------------------------------*/}\n                {/* Card-1*/}\n                {/* --------------------------------------------------------------------------------*/}\n                <Card>\n                    <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n                        <i className=\"bi bi-bell me-2\"> </i>\n                        Add a new Pill\n                    </CardTitle>\n                    <CardBody>\n                        <Form>\n                            <FormGroup>\n                                <Label for=\"firstName\">First Name</Label>\n                                <Input\n                                    id=\"firstName\"\n                                    name=\"firstName\"\n                                    placeholder=\"eg John\"\n                                    type=\"text\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"lastName\">Last Name</Label>\n                                <Input\n                                    id=\"lastName\"\n                                    name=\"lastName\"\n                                    placeholder=\"eg Doe\"\n                                    type=\"text\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"age\">Age</Label>\n                                <Input\n                                    id=\"age\"\n                                    name=\"age\"\n                                    placeholder=\"eg 20\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"gender\">Select # of Pills</Label>\n                                <Input id=\"gender\" name=\"gender\" type=\"select\">\n                                    <option>Male</option>\n                                    <option>Female</option>\n                                    <option>Other</option>\n                                </Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleText\">Comments on the patient</Label>\n                                <Input id=\"exampleText\" name=\"text\" type=\"textarea\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleFile\">File</Label>\n                                <Input id=\"exampleFile\" name=\"file\" type=\"file\" />\n                                <FormText>\n                                    You can upload the medical exams associated with the pills you take\n                                </FormText>\n                            </FormGroup>\n                            <Button>Submit</Button>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default UserForm;","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Instructions.js",["234","235"],"import {Card, CardBody, CardTitle, Col, Row} from \"reactstrap\";\nexport default function Instructions(){\n    return(\n            <Card>\n                <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n                                 stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"\n                                 className=\"feather feather-book-open\" style={{marginRight: \"20px\"}}>\n                                <path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"/>\n                                <path d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"/>\n                            </svg>\n                            <span>User manual</span>\n                </CardTitle>\n                <CardBody>\n                    <h3>The specifics will be decided later</h3>\n                </CardBody>\n            </Card>\n  )\n}","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Pop.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Pills/PilCard.jsx",["236"],"import React, {useEffect} from 'react';\nimport {Col, Row} from \"reactstrap\";\nimport { Link } from 'react-router-dom';\nimport {getPills} from \"./fakePills\";\nimport { useState } from 'react';\nimport {Button} from 'reactstrap';\nimport Card from 'react-bootstrap/Card';\nimport './pillCard.css';\nimport Pop from \"../Pop\"\nimport axios from \"axios\";\nimport { API_URL } from '../../api';\n\n\nexport default function PillCard() {\n\n    const [pills, setPills] = useState([]);\n\n    useEffect(() => {\n        axios.get(API_URL+'get_pills/')\n            .then(response => {\n                setPills(response.data);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n\n    return (\n        <Row>\n            {pills.map(pill => (\n                <Col sm=\"10\" md =\"10\" lg=\"10\" xl=\"6\" key={pill.id} style={{ borderRadius: '15px'}}>\n                    <div className='pillCard'>\n                        <Card style={{ width: '18rem' }}>\n                            <Card.Img variant=\"top\" src={pill.imageSrc} />\n                            <Card.Body className=\"p-3\">\n                                <Card.Title>{pill.name}</Card.Title>\n                                <Card.Text>\n                                    <div className=\"d-flex justify-content-start rounded-3 p-2 mb-2\"\n                                         style={{ backgroundColor: '#efefef' }}>\n                                        <div>\n                                            <p className=\"small text-muted mb-1\">Description</p>\n                                            <p className=\"mb-0\">{pill.description} </p>\n                                        </div>\n                                    </div>\n                                </Card.Text>\n                                <div className=\"button-group\">\n                                    <Pop/>\n                                    <Link to={{pathname: `/pill/${pill.id}`}} style={{ textDecoration: 'none' }}>\n                                        <Button className=\"btn\" outline color=\"info\">\n                                            More Info\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </Col>\n            ))}\n        </Row>\n\n    );\n}","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Pills/fakePills.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/Calendar.jsx",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Pills/Pill.jsx",["237"],"import React, {useEffect, useState} from 'react';\nimport {\n    MDBCol,\n    MDBContainer,\n    MDBRow,\n    MDBCard,\n    MDBCardText,\n    MDBCardBody,\n    MDBCardImage,\n} from 'mdb-react-ui-kit';\nimport {useParams} from \"react-router\";\nimport Comments from \"./Comments\";\nimport {Alert, Button, Form, FormGroup, Input, Label} from \"reactstrap\";\nimport axios from \"axios\";\nimport { API_URL } from '../../api';\n\n\nexport default function Pill() {\n    const { id } = useParams();\n    const [pill, setPill] = useState([]);\n\n    useEffect(() => {\n        axios.get(API_URL+`get_pill/${id}/`)\n            .then(response => {\n                setPill(response.data);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n\n    return (\n        <section style={{ backgroundColor: '#eee' }}>\n            <MDBContainer className=\"py-5\">\n                <MDBRow>\n                    <MDBCol lg=\"5\">\n                        <MDBCard className=\"mb-4\">\n                            <MDBCardBody className=\"text-center\">\n                                <MDBCardImage\n                                    src= {pill.imageSrc}\n                                    alt=\"avatar\"\n                                    className=\"rounded-circle\"\n                                    style={{ width: '150px' }}\n                                    fluid />\n                            </MDBCardBody>\n                        </MDBCard>\n                        <MDBCard className=\"mb-4\">\n                            <MDBCardBody>\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Name</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{pill.name}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText>Description</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{pill.description}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Weight</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{pill.weight}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Company</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{pill.company}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Remaining</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{pill.inventory}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                    <MDBCol lg=\"7\">\n                        <Alert color=\"danger\">{pill.warning}</Alert>\n                        <Comments id={pill.id}/>\n                        <Form>\n                            <FormGroup>\n                                <Label for=\"exampleText\">Leave a Comment about this pill</Label>\n                                <Input id=\"exampleText\" name=\"text\" type=\"textarea\" />\n                            </FormGroup>\n                            <Button>Submit</Button>\n                        </Form>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        </section>\n    );\n}","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Pills/Comments.jsx",["238"],"import {Card, CardBody, CardTitle, Table} from \"reactstrap\";\nimport React, {useEffect, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {useParams} from \"react-router\";\nimport axios from \"axios\";\nimport { API_URL } from '../../api';\n\n\nconst Comments = () => {\n    const { id } = useParams();\n    const [comments, setComments] = useState([]);\n\n\n    useEffect(() => {\n        axios.get(API_URL+`get_comments/${1}/`)\n            .then(response => {\n                setComments(response.data);\n                console.log(response.data);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }, []);\n    return (\n        <Card>\n            <CardBody>\n                <CardTitle tag=\"h2\">Comments about this pill</CardTitle>\n                <Table className=\"no-wrap mt-4 align-middle\" responsive borderless>\n                    <tbody>\n                        {comments.map(comment => (\n                            <tr key={comment.id}>\n                                <td>\n                                    <div className=\"d-flex align-items-center p-2\">\n                                        <Link to={{pathname: `/profile/${comment.user.id}`}} style={{ textDecoration: 'none' }}>\n                                            <img\n                                                src={comment.user.imgSrc}\n                                                className=\"rounded-circle\"\n                                                alt=\"avatar\"\n                                                width=\"45\"\n                                                height=\"45\"\n                                            />\n                                        </Link>\n                                        <div className=\"ms-5\">\n                                            <h6 className=\"mb-0\" style={{color:\"black\"}}>{comment.user.full_name}</h6>\n                                            <span className=\"text-muted\">{comment.user.email}</span>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td>\n                                    <h6>{comment.commentText}</h6>\n                                </td>\n                                <td style={{color:\"black\"}}>6 minutes ago</td>\n                            </tr>\n                    ))}\n                        </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default Comments;\n","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Pills/CommentData.js",[],["239","240"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/TimePicker.jsx",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/api.js",[],{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":14,"column":7,"nodeType":"247","messageId":"248","endLine":14,"endColumn":15},{"ruleId":"249","severity":1,"message":"250","line":62,"column":6,"nodeType":"251","endLine":62,"endColumn":8,"suggestions":"252"},{"ruleId":"241","replacedBy":"253"},{"ruleId":"243","replacedBy":"254"},{"ruleId":"245","severity":1,"message":"255","line":1,"column":36,"nodeType":"247","messageId":"248","endLine":1,"endColumn":48},{"ruleId":"245","severity":1,"message":"256","line":2,"column":9,"nodeType":"247","messageId":"248","endLine":2,"endColumn":21},{"ruleId":"245","severity":1,"message":"257","line":4,"column":9,"nodeType":"247","messageId":"248","endLine":4,"endColumn":12},{"ruleId":"258","severity":2,"message":"259","line":3,"column":35,"nodeType":"247","endLine":3,"endColumn":43},{"ruleId":"258","severity":2,"message":"260","line":4,"column":1,"nodeType":"247","endLine":4,"endColumn":10},{"ruleId":"261","severity":1,"message":"262","line":20,"column":1,"nodeType":"263","endLine":20,"endColumn":28},{"ruleId":"241","replacedBy":"264"},{"ruleId":"243","replacedBy":"265"},{"ruleId":"245","severity":1,"message":"266","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":16},{"ruleId":"245","severity":1,"message":"267","line":2,"column":32,"nodeType":"247","messageId":"248","endLine":2,"endColumn":38},{"ruleId":"245","severity":1,"message":"268","line":2,"column":63,"nodeType":"247","messageId":"248","endLine":2,"endColumn":74},{"ruleId":"245","severity":1,"message":"269","line":10,"column":5,"nodeType":"247","messageId":"248","endLine":10,"endColumn":11},{"ruleId":"245","severity":1,"message":"270","line":11,"column":5,"nodeType":"247","messageId":"248","endLine":11,"endColumn":18},{"ruleId":"245","severity":1,"message":"271","line":12,"column":5,"nodeType":"247","messageId":"248","endLine":12,"endColumn":22},{"ruleId":"245","severity":1,"message":"272","line":15,"column":5,"nodeType":"247","messageId":"248","endLine":15,"endColumn":12},{"ruleId":"245","severity":1,"message":"273","line":16,"column":5,"nodeType":"247","messageId":"248","endLine":16,"endColumn":17},{"ruleId":"245","severity":1,"message":"274","line":17,"column":5,"nodeType":"247","messageId":"248","endLine":17,"endColumn":21},{"ruleId":"245","severity":1,"message":"275","line":20,"column":9,"nodeType":"247","messageId":"248","endLine":20,"endColumn":20},{"ruleId":"245","severity":1,"message":"276","line":20,"column":22,"nodeType":"247","messageId":"248","endLine":20,"endColumn":32},{"ruleId":"245","severity":1,"message":"277","line":20,"column":34,"nodeType":"247","messageId":"248","endLine":20,"endColumn":47},{"ruleId":"245","severity":1,"message":"278","line":20,"column":49,"nodeType":"247","messageId":"248","endLine":20,"endColumn":61},{"ruleId":"245","severity":1,"message":"279","line":20,"column":63,"nodeType":"247","messageId":"248","endLine":20,"endColumn":73},{"ruleId":"245","severity":1,"message":"280","line":20,"column":75,"nodeType":"247","messageId":"248","endLine":20,"endColumn":83},{"ruleId":"245","severity":1,"message":"281","line":20,"column":85,"nodeType":"247","messageId":"248","endLine":20,"endColumn":95},{"ruleId":"245","severity":1,"message":"282","line":20,"column":97,"nodeType":"247","messageId":"248","endLine":20,"endColumn":109},{"ruleId":"245","severity":1,"message":"283","line":20,"column":111,"nodeType":"247","messageId":"248","endLine":20,"endColumn":125},{"ruleId":"249","severity":1,"message":"284","line":43,"column":8,"nodeType":"251","endLine":43,"endColumn":10,"suggestions":"285"},{"ruleId":"245","severity":1,"message":"286","line":16,"column":9,"nodeType":"247","messageId":"248","endLine":16,"endColumn":21},{"ruleId":"245","severity":1,"message":"287","line":12,"column":30,"nodeType":"247","messageId":"248","endLine":12,"endColumn":39},{"ruleId":"245","severity":1,"message":"288","line":16,"column":16,"nodeType":"247","messageId":"248","endLine":16,"endColumn":24},{"ruleId":"245","severity":1,"message":"289","line":13,"column":15,"nodeType":"247","messageId":"248","endLine":13,"endColumn":28},{"ruleId":"245","severity":1,"message":"290","line":1,"column":36,"nodeType":"247","messageId":"248","endLine":1,"endColumn":39},{"ruleId":"245","severity":1,"message":"257","line":1,"column":41,"nodeType":"247","messageId":"248","endLine":1,"endColumn":44},{"ruleId":"245","severity":1,"message":"291","line":4,"column":9,"nodeType":"247","messageId":"248","endLine":4,"endColumn":17},{"ruleId":"249","severity":1,"message":"284","line":30,"column":8,"nodeType":"251","endLine":30,"endColumn":10,"suggestions":"292"},{"ruleId":"245","severity":1,"message":"293","line":10,"column":13,"nodeType":"247","messageId":"248","endLine":10,"endColumn":15},{"ruleId":"241","replacedBy":"294"},{"ruleId":"243","replacedBy":"295"},"no-native-reassign",["296"],"no-negated-in-lhs",["297"],"no-unused-vars","'BlogData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'next_user'. Either include it or remove the dependency array.","ArrayExpression",["298"],["296"],["297"],"'CardSubtitle' is defined but never used.","'getTableData' is defined but never used.","'Row' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.","React Hook \"useEffect\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["296"],["297"],"'MDBCol' is defined but never used.","'MDBRow' is defined but never used.","'MDBCardText' is defined but never used.","'MDBBtn' is defined but never used.","'MDBBreadcrumb' is defined but never used.","'MDBBreadcrumbItem' is defined but never used.","'MDBIcon' is defined but never used.","'MDBListGroup' is defined but never used.","'MDBListGroupItem' is defined but never used.","'getUserName' is defined but never used.","'getUserAge' is defined but never used.","'getUserGender' is defined but never used.","'getUserPills' is defined but never used.","'getUserImg' is defined but never used.","'getEmail' is defined but never used.","'getPillSum' is defined but never used.","'getUserPhone' is defined but never used.","'getUserAddress' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["299"],"'MDBContainer' is defined but never used.","'ListGroup' is defined but never used.","'useState' is defined but never used.","'ListGroupItem' is defined but never used.","'Col' is defined but never used.","'getPills' is defined but never used.",["300"],"'id' is assigned a value but never used.",["296"],["297"],"no-global-assign","no-unsafe-negation",{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"303","fix":"305"},"Update the dependencies array to be: [next_user]",{"range":"306","text":"307"},"Update the dependencies array to be: [id]",{"range":"308","text":"309"},{"range":"310","text":"309"},[1847,1849],"[next_user]",[1161,1163],"[id]",[758,760]]