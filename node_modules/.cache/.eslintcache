[{"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/index.js":"1","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/App.js":"2","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/reportWebVitals.js":"3","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/loader/Loader.js":"4","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/routes/Router.js":"5","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/FullLayout.js":"6","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/About.js":"7","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/Starter.js":"8","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Breadcrumbs.js":"9","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Forms.js":"10","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Tables.js":"11","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Cards.js":"12","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Grid.js":"13","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Buttons.js":"14","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Badges.js":"15","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Alerts.js":"16","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Sidebar.js":"17","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Header.js":"18","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/ComponentCard.js":"19","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/SalesChart.js":"20","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Feeds.js":"21","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/ProjectTable.js":"22","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/TopCards.js":"23","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Blog.js":"24","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Logo.js":"25","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/ProjectData.js":"26","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Clock.js":"27","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/PopUp.js":"28","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Time.js":"29","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/ProfileCard.jsx":"30","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/Profile.jsx":"31","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/fakeProfiles.js":"32","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/PillForm.js":"33","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/PillPerForm.js":"34","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/UserForm.js":"35","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Instructions.js":"36","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Pop.js":"37"},{"size":664,"mtime":1677791398540,"results":"38","hashOfConfig":"39"},{"size":225,"mtime":1635946920000,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":499175100000,"results":"41","hashOfConfig":"39"},{"size":272,"mtime":1636194300000,"results":"42","hashOfConfig":"39"},{"size":2317,"mtime":1679650106530,"results":"43","hashOfConfig":"39"},{"size":776,"mtime":1638434926000,"results":"44","hashOfConfig":"39"},{"size":4718,"mtime":1662039000000,"results":"45","hashOfConfig":"39"},{"size":3979,"mtime":1679684368791,"results":"46","hashOfConfig":"39"},{"size":1386,"mtime":1636229280000,"results":"47","hashOfConfig":"39"},{"size":3805,"mtime":1679650507404,"results":"48","hashOfConfig":"39"},{"size":4795,"mtime":1636214562000,"results":"49","hashOfConfig":"39"},{"size":9517,"mtime":1636213596000,"results":"50","hashOfConfig":"39"},{"size":4507,"mtime":1636213680000,"results":"51","hashOfConfig":"39"},{"size":11071,"mtime":1636211934000,"results":"52","hashOfConfig":"39"},{"size":7423,"mtime":1636211912000,"results":"53","hashOfConfig":"39"},{"size":7698,"mtime":1636211892000,"results":"54","hashOfConfig":"39"},{"size":2844,"mtime":1679499645346,"results":"55","hashOfConfig":"39"},{"size":3073,"mtime":1677793233999,"results":"56","hashOfConfig":"39"},{"size":643,"mtime":1639989708000,"results":"57","hashOfConfig":"39"},{"size":1324,"mtime":1636210186000,"results":"58","hashOfConfig":"39"},{"size":1935,"mtime":1677961587825,"results":"59","hashOfConfig":"39"},{"size":2405,"mtime":1679685012739,"results":"60","hashOfConfig":"39"},{"size":646,"mtime":1677783011694,"results":"61","hashOfConfig":"39"},{"size":565,"mtime":1677774826965,"results":"62","hashOfConfig":"39"},{"size":249,"mtime":1635951350000,"results":"63","hashOfConfig":"39"},{"size":907,"mtime":1679684761267,"results":"64","hashOfConfig":"39"},{"size":441,"mtime":1677792354698,"results":"65","hashOfConfig":"39"},{"size":1687,"mtime":1679651903996,"results":"66","hashOfConfig":"39"},{"size":276,"mtime":1678363993513,"results":"67","hashOfConfig":"39"},{"size":3543,"mtime":1679665722546,"results":"68","hashOfConfig":"39"},{"size":7129,"mtime":1679417773957,"results":"69","hashOfConfig":"39"},{"size":2029,"mtime":1679684761252,"results":"70","hashOfConfig":"39"},{"size":2779,"mtime":1679425850326,"results":"71","hashOfConfig":"39"},{"size":4909,"mtime":1679417860842,"results":"72","hashOfConfig":"39"},{"size":3439,"mtime":1679425513364,"results":"73","hashOfConfig":"39"},{"size":982,"mtime":1679659302312,"results":"74","hashOfConfig":"39"},{"size":1092,"mtime":1679665555258,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"2utoze",{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/index.js",[],["155","156"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/App.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/reportWebVitals.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/loader/Loader.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/routes/Router.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/FullLayout.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/About.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/Starter.js",["157","158","159","160"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Breadcrumbs.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Forms.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Tables.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Cards.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Grid.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Buttons.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Badges.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/views/ui/Alerts.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Sidebar.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Header.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/ComponentCard.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/SalesChart.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Feeds.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/ProjectTable.js",["161","162"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/TopCards.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Blog.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/layouts/Logo.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/ProjectData.js",["163","164"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/dashboard/Clock.js",["165","166","167"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/PopUp.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Time.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/ProfileCard.jsx",["168","169","170"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/Profile.jsx",["171","172","173","174","175","176","177"],"import React, {useState} from 'react';\nimport {\n    MDBCol,\n    MDBContainer,\n    MDBRow,\n    MDBCard,\n    MDBCardText,\n    MDBCardBody,\n    MDBCardImage,\n    MDBBtn,\n    MDBBreadcrumb,\n    MDBBreadcrumbItem,\n    MDBProgress,\n    MDBProgressBar,\n    MDBIcon,\n    MDBListGroup,\n    MDBListGroupItem\n} from 'mdb-react-ui-kit';\nimport {useParams} from \"react-router\";\nimport {getUserName, getUserAge, getUserGender, getUserPills, getUserImg, getEmail, getPillSum, getUserPhone, getUserAddress} from \"./fakeProfiles\";\nimport {Badge, Button} from \"reactstrap\";\nimport SalesChart from \"../dashboard/SalesChart\";\nimport {Link} from \"react-router-dom\";\n\n\nexport default function Profile() {\n    //const id = useLocation().state.id;\n    const { id } = useParams();\n    console.log(id);\n    const dictionary = getUserPills(id);\n    const entries = Object.entries(dictionary);\n    const sum = getPillSum(id);\n    console.log(sum);\n\n\n    return (\n        <section style={{ backgroundColor: '#eee' }}>\n            <MDBContainer className=\"py-5\">\n                <MDBRow>\n                    <MDBCol lg=\"4\">\n                        <MDBCard className=\"mb-4\">\n                            <MDBCardBody className=\"text-center\">\n                                <MDBCardImage\n                                    src= {getUserImg(id)}\n                                    alt=\"avatar\"\n                                    className=\"rounded-circle\"\n                                    style={{ width: '150px' }}\n                                    fluid />\n                            </MDBCardBody>\n                        </MDBCard>\n\n                        <MDBCard className=\"mb-4 mb-md-0\">\n                            <MDBCardBody>\n                                <MDBCardText className=\"mb-4\"><span className=\"text-primary font-italic me-1\"><h3>Prescription Pills</h3></span></MDBCardText>\n                                {entries.map(([key, value]) => (\n                                    <React.Fragment>\n                                        <MDBCardText className=\"mt-4 mb-1\" style={{ fontSize: '.77rem'}}>\n                                            <h5>{key}\n                                                <Badge color=\"secondary\" style={{marginLeft: '8px'}}>{value}</Badge>\n                                            </h5>\n                                        </MDBCardText>\n                                            <MDBProgress className=\"rounded\" >\n                                                <MDBProgressBar width={(value/sum)*100} valuemin={0} valuemax={100} />\n                                            </MDBProgress>\n                                    </React.Fragment>\n                                    ))}\n                            </MDBCardBody>\n\n                            <MDBCardBody>\n                                <Link to={{pathname: `/pillPerForm/${id}`}} style={{ textDecoration: 'none' }}>\n                                    <Button\n                                        className=\"btn\"\n                                        outline\n                                        color=\"primary\"\n                                        style={{\n                                            position: \"absolute\",\n                                            bottom: 10,\n                                            right: 10,\n                                            margin: \"10px\",\n                                        }}\n                                    >\n                                        Add a pill\n                                    </Button>\n                                </Link>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                    <MDBCol lg=\"8\">\n                        <MDBCard className=\"mb-4\">\n                            <MDBCardBody>\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Full Name</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{getUserName(id)}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Age</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{getUserAge(id)}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Gender</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{getUserGender(id)}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Email</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{getEmail(id)}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Phone</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{getUserPhone(id)}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                                <hr />\n                                <MDBRow>\n                                    <MDBCol sm=\"3\">\n                                        <MDBCardText>Address</MDBCardText>\n                                    </MDBCol>\n                                    <MDBCol sm=\"9\">\n                                        <MDBCardText className=\"text-muted\">{getUserAddress(id)}</MDBCardText>\n                                    </MDBCol>\n                                </MDBRow>\n                            </MDBCardBody>\n                        </MDBCard>\n\n                        <MDBRow>\n                            <SalesChart/>\n                        </MDBRow>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        </section>\n    );\n}","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/profile/fakeProfiles.js",[],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/PillForm.js",["178"],"import {\n    Card,\n    Row,\n    Col,\n    CardTitle,\n    CardBody,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input\n} from \"reactstrap\";\n\nimport React, {useState} from \"react\";\nimport {getUsers} from \"../profile/fakeProfiles\";\nimport {MDBContainer} from \"mdb-react-ui-kit\";\nconst PillForm = () => {\n    const [users] = useState(getUsers());\n    return (\n        <Row>\n            <Col>\n\n                <Card>\n                    <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n                        <i className=\"bi bi-bell me-2\"> </i>\n                        Add a new Pill\n                    </CardTitle>\n                    <CardBody>\n                        <Form>\n                            <FormGroup>\n                                <Label for=\"pillName\">Pill name</Label>\n                                <Input\n                                    id=\"pillName\"\n                                    name=\"pillName\"\n                                    placeholder=\"eg Depon\"\n                                    type=\"text\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"pillDosage\">Select # of Pills</Label>\n                                <Input id=\"pillDosage\" name=\"pillDosage\" type=\"select\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleSelectMulti\"><strong>Exclude</strong> Patient from taking this Pill</Label>\n                                <Input\n                                    id=\"exampleSelectMulti\"\n                                    multiple\n                                    name=\"selectMulti\"\n                                    type=\"select\"\n                                >\n                                    {users.map(user => (\n                                        <option>{user.name}</option>\n                                    ))}\n                                </Input>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Input type=\"checkbox\" /> <Label check>Check me out</Label>\n                            </FormGroup>\n                            <Button>Submit</Button>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PillForm;\n","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/PillPerForm.js",["179","180","181"],"import {\n    Card,\n    Row,\n    Col,\n    CardTitle,\n    CardBody,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText, ListGroupItem, ListGroup,\n} from \"reactstrap\";\nimport PopUp from \"../PopUp\";\nimport Time from '../Time';\nimport React, {useState} from \"react\";\nimport {getUserName} from \"../profile/fakeProfiles\";\nimport {useParams} from \"react-router\";\n\nconst timeData = [\n    {\n        title: \"Morning\",\n        icon: \"bi bi-brightness-high\",\n        color: \"warning\",\n    },\n    {\n        title: \"Noon\",\n        icon: \"bi bi-cloud-moon\",\n        color: \"info\",\n    },\n    {\n        title: \"Night\",\n        icon: \"bi bi-moon-stars\",\n        color: \"primary\",\n    },\n];\n\nconst PillPerForm = () => {\n    //const [buttonPopUp, setButtonPopUp] = useState(false); //for popup use\n    const { id } = useParams();\n    console.log(id);\n    return (\n        <Row>\n            <Col>\n                {/* --------------------------------------------------------------------------------*/}\n                {/* Card-1*/}\n                {/* --------------------------------------------------------------------------------*/}\n                <Card>\n                    <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n                        <i className=\"bi bi-bell me-2\"> </i>\n                        Add a new Pill for {getUserName(id)}\n                    </CardTitle>\n                    <CardBody>\n                        <Form>\n                            <FormGroup>\n                                <Label for=\"pillName\">Pill name</Label>\n                                <Input\n                                    id=\"pillName\"\n                                    name=\"pillName\"\n                                    placeholder=\"eg Depon\"\n                                    type=\"text\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"pillDosage\">Select # of Pills</Label>\n                                <Input id=\"pillDosage\" name=\"pillDosage\" type=\"select\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Input>\n                            </FormGroup>\n                            <FormGroup>\n                                {/*<div onClick={() => setButtonPopUp(true)}>\n                                    <Button className=\"btn\" outline color=\"primary\">\n                                        Set pill intake time\n                                    </Button>\n                                </div>\n                                <PopUp trigger={buttonPopUp} setTrigger={setButtonPopUp}>\n                                    <h3>My popup</h3>\n                                </PopUp>*/}\n                                <Time/>\n                                <Label for=\"pillDosage\">Set Time Intake</Label>\n                                {timeData.map((feed, index) => (\n                                    <ListGroupItem\n                                        key={index}\n                                        action\n                                        href=\"#\"\n                                        className=\"d-flex align-items-center p-3 border-0\"\n                                    >\n                                        <Button\n                                            className=\"rounded-circle me-3\"\n                                            size=\"sm\"\n                                            color={feed.color}\n                                        >\n                                            <i className={feed.icon}/>\n                                        </Button>\n                                        {feed.title}\n                                    </ListGroupItem>\n\n                                ))}\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleFile\">File</Label>\n                                <Input id=\"exampleFile\" name=\"file\" type=\"file\" />\n                                <FormText>\n                                    You can upload the medical exams associated with the pills you take\n                                </FormText>\n                            </FormGroup>\n                            <FormGroup check>\n                                <Input type=\"checkbox\" /> <Label check>Check me out</Label>\n                            </FormGroup>\n                            <Button>Submit</Button>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PillPerForm;\n","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/AddForms/UserForm.js",["182"],"import React from \"react\";\nimport {\n    Card,\n    Row,\n    Col,\n    CardTitle,\n    CardBody,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText, ListGroupItem\n} from \"reactstrap\";\n\nconst UserForm = () => {\n    return (\n        <Row>\n            <Col>\n                {/* --------------------------------------------------------------------------------*/}\n                {/* Card-1*/}\n                {/* --------------------------------------------------------------------------------*/}\n                <Card>\n                    <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\n                        <i className=\"bi bi-bell me-2\"> </i>\n                        Add a new Pill\n                    </CardTitle>\n                    <CardBody>\n                        <Form>\n                            <FormGroup>\n                                <Label for=\"firstName\">First Name</Label>\n                                <Input\n                                    id=\"firstName\"\n                                    name=\"firstName\"\n                                    placeholder=\"eg John\"\n                                    type=\"text\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"lastName\">Last Name</Label>\n                                <Input\n                                    id=\"lastName\"\n                                    name=\"lastName\"\n                                    placeholder=\"eg Doe\"\n                                    type=\"text\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"age\">Age</Label>\n                                <Input\n                                    id=\"age\"\n                                    name=\"age\"\n                                    placeholder=\"eg 20\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"gender\">Select # of Pills</Label>\n                                <Input id=\"gender\" name=\"gender\" type=\"select\">\n                                    <option>Male</option>\n                                    <option>Female</option>\n                                    <option>Other</option>\n                                </Input>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleText\">Comments on the patient</Label>\n                                <Input id=\"exampleText\" name=\"text\" type=\"textarea\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleFile\">File</Label>\n                                <Input id=\"exampleFile\" name=\"file\" type=\"file\" />\n                                <FormText>\n                                    You can upload the medical exams associated with the pills you take\n                                </FormText>\n                            </FormGroup>\n                            <Button>Submit</Button>\n                        </Form>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default UserForm;","/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Instructions.js",["183","184"],"/Users/michael/Desktop/Projects/CP/WebDev/react/MED-Box/src/components/Pop.js",[],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":9,"column":22,"nodeType":"191","messageId":"192","endLine":9,"endColumn":30},{"ruleId":"189","severity":1,"message":"193","line":12,"column":8,"nodeType":"191","messageId":"192","endLine":12,"endColumn":13},{"ruleId":"189","severity":1,"message":"194","line":13,"column":8,"nodeType":"191","messageId":"192","endLine":13,"endColumn":14},{"ruleId":"189","severity":1,"message":"195","line":15,"column":7,"nodeType":"191","messageId":"192","endLine":15,"endColumn":15},{"ruleId":"189","severity":1,"message":"196","line":1,"column":36,"nodeType":"191","messageId":"192","endLine":1,"endColumn":48},{"ruleId":"189","severity":1,"message":"197","line":4,"column":9,"nodeType":"191","messageId":"192","endLine":4,"endColumn":12},{"ruleId":"189","severity":1,"message":"198","line":4,"column":8,"nodeType":"191","messageId":"192","endLine":4,"endColumn":13},{"ruleId":"189","severity":1,"message":"199","line":5,"column":8,"nodeType":"191","messageId":"192","endLine":5,"endColumn":13},{"ruleId":"200","severity":2,"message":"201","line":3,"column":35,"nodeType":"191","endLine":3,"endColumn":43},{"ruleId":"200","severity":2,"message":"202","line":4,"column":1,"nodeType":"191","endLine":4,"endColumn":10},{"ruleId":"203","severity":1,"message":"204","line":20,"column":1,"nodeType":"205","endLine":20,"endColumn":28},{"ruleId":"189","severity":1,"message":"206","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":16},{"ruleId":"189","severity":1,"message":"207","line":2,"column":32,"nodeType":"191","messageId":"192","endLine":2,"endColumn":38},{"ruleId":"189","severity":1,"message":"208","line":2,"column":63,"nodeType":"191","messageId":"192","endLine":2,"endColumn":74},{"ruleId":"189","severity":1,"message":"209","line":1,"column":16,"nodeType":"191","messageId":"192","endLine":1,"endColumn":24},{"ruleId":"189","severity":1,"message":"210","line":10,"column":5,"nodeType":"191","messageId":"192","endLine":10,"endColumn":11},{"ruleId":"189","severity":1,"message":"211","line":11,"column":5,"nodeType":"191","messageId":"192","endLine":11,"endColumn":18},{"ruleId":"189","severity":1,"message":"212","line":12,"column":5,"nodeType":"191","messageId":"192","endLine":12,"endColumn":22},{"ruleId":"189","severity":1,"message":"213","line":15,"column":5,"nodeType":"191","messageId":"192","endLine":15,"endColumn":12},{"ruleId":"189","severity":1,"message":"214","line":16,"column":5,"nodeType":"191","messageId":"192","endLine":16,"endColumn":17},{"ruleId":"189","severity":1,"message":"215","line":17,"column":5,"nodeType":"191","messageId":"192","endLine":17,"endColumn":21},{"ruleId":"189","severity":1,"message":"216","line":16,"column":9,"nodeType":"191","messageId":"192","endLine":16,"endColumn":21},{"ruleId":"189","severity":1,"message":"217","line":12,"column":30,"nodeType":"191","messageId":"192","endLine":12,"endColumn":39},{"ruleId":"189","severity":1,"message":"218","line":14,"column":8,"nodeType":"191","messageId":"192","endLine":14,"endColumn":13},{"ruleId":"189","severity":1,"message":"209","line":16,"column":16,"nodeType":"191","messageId":"192","endLine":16,"endColumn":24},{"ruleId":"189","severity":1,"message":"219","line":13,"column":15,"nodeType":"191","messageId":"192","endLine":13,"endColumn":28},{"ruleId":"189","severity":1,"message":"220","line":1,"column":36,"nodeType":"191","messageId":"192","endLine":1,"endColumn":39},{"ruleId":"189","severity":1,"message":"197","line":1,"column":41,"nodeType":"191","messageId":"192","endLine":1,"endColumn":44},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'getUsers' is defined but never used.","Identifier","unusedVar","'Feeds' is defined but never used.","'Tables' is defined but never used.","'BlogData' is assigned a value but never used.","'CardSubtitle' is defined but never used.","'Row' is defined but never used.","'user4' is defined but never used.","'user5' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.","React Hook \"useEffect\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'MDBCol' is defined but never used.","'MDBRow' is defined but never used.","'MDBCardText' is defined but never used.","'useState' is defined but never used.","'MDBBtn' is defined but never used.","'MDBBreadcrumb' is defined but never used.","'MDBBreadcrumbItem' is defined but never used.","'MDBIcon' is defined but never used.","'MDBListGroup' is defined but never used.","'MDBListGroupItem' is defined but never used.","'MDBContainer' is defined but never used.","'ListGroup' is defined but never used.","'PopUp' is defined but never used.","'ListGroupItem' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]